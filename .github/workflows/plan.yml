name: 'Plan'
on:
  workflow_dispatch:
    inputs:
      directory:
        description: "directory"
        required: true
        default: "introduction"

jobs:
  plan-scan:
    name: Plan scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    # defaults:
    #   run:
    #     shell: bash
    #     working-directory: ${{ github.event.inputs.directory }}
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Checkov
        run: pip install checkov

      - name: Checkov version
        run: checkov -v

      - name: Install terraform
        run: |
          curl -O https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip
          sudo apt install zip -y
          sudo unzip terraform_1.0.7_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform version

      - name: terraform init
        run: terraform -chdir=${{ github.event.inputs.directory }} init

      - name: terraform plan
        run: terraform -chdir=${{ github.event.inputs.directory }} plan --out tfplan.binary

      - name: terraform show
        run: terraform -chdir=${{ github.event.inputs.directory }} show -json tfplan.binary > ${{ github.event.inputs.directory }}/tfplan.json
  
      - name: Scan with Checkov
        run: |
          checkov -f ${{ github.event.inputs.directory }}/tfplan.json  -o junitxml > ${{ github.event.inputs.directory }}/plan-report.xml
          
      - name: Upload results
        uses: actions/upload-artifact@v2  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: ${{ github.event.inputs.directory }}/plan-report.xml