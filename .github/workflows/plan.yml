name: 'Plan'
on:
  workflow_dispatch:
    inputs:
      directory:
        description: "directory"
        required: true
        default: "introduction"

jobs:
  plan-scan:
    name: Plan scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install terraform
        run: |
          curl -O https://releases.hashicorp.com/terraform/1.0.7/terraform_1.0.7_linux_amd64.zip
          sudo apt install zip -y
          sudo unzip terraform_1.0.7_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          terraform version

      - name: terraform init
        run: terraform -chdir=${{ github.event.inputs.directory }} init

      - name: terraform plan
        run: terraform -chdir=${{ github.event.inputs.directory }} plan --out tfplan.binary

      - name: terraform show
        run: terraform -chdir=${{ github.event.inputs.directory }} show -json tfplan.binary > ${{ github.event.inputs.directory }}/tfplan.json

      - name: Scan with Checkov
        run: |
          docker run -v `pwd`/${{ github.event.inputs.directory }}:/${{ github.event.inputs.directory }} bridgecrew/checkov \
          -f ${{ github.event.inputs.directory }}/tfplan.json --config-file ${{ github.event.inputs.directory }}/.checkov.yaml \
          --output junitxml > ${{ github.event.inputs.directory }}/plan-${{ github.event.inputs.directory }}-report.xml

      - name: Delete docker process
        run: |
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)

      - name: Publish Checkov scan result
        uses: EnricoMi/publish-unit-test-result-action@master
        if: always()
        with:
          files: ${{ github.event.inputs.directory }}/plan-${{ github.event.inputs.directory }}-report.xml
          
      # - name: Upload results
      #   uses: actions/upload-artifact@v2  # upload test results
      #   if: success() || failure()        # run this step even if previous step failed
      #   with:
      #     name: plan-${{ github.event.inputs.directory }}-results
      #     path: ${{ github.event.inputs.directory }}/plan-${{ github.event.inputs.directory }}-report.xml