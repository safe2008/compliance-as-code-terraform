name: build
on:
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout repo
        with:
          fetch-depth: 0

      - name: Checkov Scan
        id: checkov
        if: github.event_name == 'pull_request'
        run: |
          docker run -v `pwd`/introduction:/introduction bridgecrew/checkov \
            -d introduction --config-file introduction/.checkov.yaml \
            -o github_failed_only -s >> README.md
            
      - name: Create Issue From File
        id: ciff
        uses: peter-evans/create-issue-from-file@v3
        with:
          title: Checkov Scan
          content-filepath: README.md
          labels: |
            report
            automated issue
          assignees: safe2008

      # - name: Create or Update Project Card
      #   uses: peter-evans/create-or-update-project-card@v1
      #   with:
      #     project-name: Compliance as code terraform
      #     column-name: My column
      #     issue-number: ${{ steps.ciff.outputs.issue-number }}

      # - name: Run yor action
      #   uses: bridgecrewio/yor-action@main

      # - name: Commit tag changes
      #   uses: stefanzweifel/git-auto-commit-action@v4

      # - name: Update documentation
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git fetch --tags
      #     git pull
      #     latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
      #     echo "latest tag: $latest_tag"
      #     new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
      #     echo "new tag: $new_tag"

      #     docker run -v `pwd`/introduction:/introduction bridgecrew/checkov \
      #       -d introduction --config-file introduction/.checkov.yaml \
      #       -o github_failed_only -s >> README.md

      #     # pip install -U checkov
      #     # cat .github/template.md > README.md && checkov -d introduction -o github_failed_only -s >> README.md

      #     git add README.md  || echo "No changes to commit"
      #     git commit -m "update resource scan result doc" README.md || echo "No changes to commit"
      #     git push origin
      #     git tag $new_tag
      #     git push origin $new_tag
  